%---- tan Upper Bounds

%---- tan Continued Fractions
% Source: F. Backeljauw, A. Cuyt, A Continued Fractions Package for Special Functions

% Tricky: uses the Thiele interpolating fraction EF.tan.thiele.02 with approximations for pi^2
% the second approximant. Accurate to .12 only.
cnf(tan_upper_bound_pos1,axiom,
     ( ~ 0 <= X
     | ~ X <= 1
     | ~ lgen(R, 9.87*X / (-4*X^2+9.86), Y)
     | lgen(R,tan(X),Y) )).

% based on the Taylor series expansions of sin(X) and cos(X)
% diverges at +/- 1.5699
cnf(tan_upper_bound_pos2,axiom,
     ( ~ 0 <= X
     | ~ X <= 1.56
     | ~ lgen(R, -6*X*(120-20*X^2+X^4) / (-720+360*X^2-30*X^4+X^6), Y)
     | lgen(R,tan(X),Y) )).

% based on the Taylor series expansions of sin(X) and cos(X)
% diverges at +/- 1.570795862
cnf(tan_upper_bound_pos3,axiom,
     ( ~ 0 <= X
     | ~ X <= 1.570795
     | ~ lgen(R, -10*X*(362880-60480*X^2+3024*X^4-72*X^6+X^8) / (-3628800+1814400*X^2-151200*X^4+5040*X^6-90*X^8+X^10), Y)
     | lgen(R,tan(X),Y) )).

% Bounds for negative arguments
%   Using the logical complement (0 <= X) would be less general and yields no benefits.

% the first approximant
cnf(tan_upper_bound_neg0,axiom,
     ( ~ X <= 0
     | ~ -1.57 <= X
     | ~ lgen(R, X, Y)
     | lgen(R,tan(X),Y) )).

% the third approximant. Accurate to .002 between -1 and 0, to .04 from -1.3 to 0.
cnf(tan_upper_bound_neg1,axiom,
     ( ~ X <= 0
     | ~ -1.57 <= X
     | ~ lgen(R, (1/3)*(X^2-15)*X / (2*X^2-5), Y)
     | lgen(R,tan(X),Y) )).

% the sixth approximant. Accurate to 2.3e-9 between -1 and 0, to .002 from -1.56
cnf(tan_upper_bound_neg2,axiom,
     ( ~ X <= 0
     | ~ -1.570795 <= X
     | ~ lgen(R, -(21*(X^4-60*X^2+495))*X / (X^6-210*X^4+4725*X^2-10395), Y)
     | lgen(R,tan(X),Y) )).
